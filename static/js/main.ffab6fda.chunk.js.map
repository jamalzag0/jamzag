{"version":3,"sources":["components/CovidLoading.js","tasks/CommonUtils.js","components/CovidPopup.js","components/CovidMap.js","components/CovidLegend.js","tasks/LoadCountry.js","components/CovidZones.js","components/CovidPieChart.js","resources/images/Worldflags.png","components/Covid19.js","App.js","index.js"],"names":["CovidLoading","style","height","display","justifyContent","alignItems","className","role","sortCountries","data","sortedCountries","sort","a","b","properties","ADMIN","getCentroid","reduce","x","y","length","processCovidVaccineData","vaccinated","n","timeline","formatNumber","number","toString","replace","err","CovidPopup","covidSelectedValues","country","backgroundImage","flag","population","cases","recovered","deaths","CovidMap","countries","selectedValues","MapContainer","zoom","center","scrollWheelZoom","GeoJSON","onEachFeature","layer","options","color","fillColor","fillOpacity","weight","countryName","bindPopup","Marker","position","lat","lng","icon","Icon","iconUrl","markerIconPng","iconSize","iconAnchor","popupAnchor","Popup","CovidLegend","Card","bg","border","text","Img","src","Body","Text","as","active","LoadCountriesTask","mapCountries","features","setState","load","fetch","then","response","json","worldCountries","i","mapCountry","worldCountry","find","countryInfo","iso3","ISO_A3","CovidZones","id","COLORS","CovidPieChart","covidChartData","PieChart","width","Pie","label","dataKey","nameKey","isAnimationActive","cx","cy","outerRadius","fill","map","e","index","Cell","Tooltip","Covid19","numbers","useState","setCountries","chartData","setChartData","setSelectedValues","loadAllCountries","vacData","Worldflags","name","value","useEffect","handleCountryChange","target","geometry","type","coordinates","url","onChange","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffab6fda.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CovidLoading = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading Map...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CovidLoading;\r\n","export const sortCountries = (data) => {\r\n  const sortedCountries = [...data];\r\n\r\n  sortedCountries.sort((a, b) => {\r\n    if (a.properties.ADMIN < b.properties.ADMIN) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n\r\n  return sortedCountries;\r\n};\r\n\r\nexport const getCentroid = function (data) {\r\n  return data.reduce(\r\n    function (x, y) {\r\n      return [x[0] + y[0] / data.length, x[1] + y[1] / data.length];\r\n    },\r\n    [0, 0]\r\n  );\r\n};\r\n\r\nexport const processCovidVaccineData = (data) => {\r\n  let vaccinated = 0;\r\n  for (const n in data.timeline) {\r\n    vaccinated = data.timeline[n];\r\n    break;\r\n  }\r\n  if (vaccinated === 0) {\r\n    for (const n in data) {\r\n      vaccinated = data[n];\r\n      break;\r\n    }\r\n  }\r\n  return vaccinated;\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n  try {\r\n    const formattedString = number.toString();\r\n    return formattedString.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  } catch (err) {\r\n    //console.log(err);\r\n    // if not avaiable set to 0\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport const setColorCountry = (country) => {\r\n  country.properties.color = \"black\";\r\n\r\n  if (country.properties.cases >= 1000000) country.properties.fillColor = \"red\";\r\n  else if (\r\n    country.properties.cases >= 500000 &&\r\n    country.properties.cases < 1000000\r\n  )\r\n    country.properties.fillColor = \"gray\";\r\n  else if (\r\n    country.properties.cases >= 200000 &&\r\n    country.properties.cases < 500000\r\n  )\r\n    country.properties.fillColor = \"orange\";\r\n  else if (\r\n    country.properties.cases >= 50000 &&\r\n    country.properties.cases < 200000\r\n  )\r\n    country.properties.fillColor = \"yellow\";\r\n  else if (country.properties.cases > 0 && country.properties.cases < 50000)\r\n    country.properties.fillColor = \"green\";\r\n  else country.properties.fillColor = \"pink\";\r\n\r\n  return country;\r\n};\r\n","import React from \"react\";\r\nimport { formatNumber } from \"../tasks/CommonUtils\";\r\nimport \"../styles/MapStyles.css\";\r\n\r\nfunction CovidPopup({ covidSelectedValues }) {\r\n  return (\r\n    <div className=\"covid19-stat-container\">\r\n      <div className=\"covid19-stat-name\">{covidSelectedValues.country}</div>\r\n      <div\r\n        className=\"covid19-stat-flag\"\r\n        style={{ backgroundImage: `url(${covidSelectedValues.flag})` }}\r\n      ></div>\r\n      <div className=\"covid19-stat-population\">\r\n        Population: {formatNumber(covidSelectedValues.population)}\r\n      </div>\r\n      <div className=\"covid19-stat-vaccinated\">\r\n        Vaccinated: {formatNumber(covidSelectedValues.vaccinated)}\r\n      </div>\r\n      <div className=\"covid19-stat-confirmed\">\r\n        Cases: {formatNumber(covidSelectedValues.cases)}\r\n      </div>\r\n      <div className=\"covid19-stat-recovered\">\r\n        Recovered: {formatNumber(covidSelectedValues.recovered)}\r\n      </div>\r\n      <div className=\"covid19-stat-deaths\">\r\n        Deaths: {formatNumber(covidSelectedValues.deaths)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CovidPopup;\r\n","import React from \"react\";\r\nimport { MapContainer, GeoJSON, Marker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../styles/MapStyles.css\";\r\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\";\r\nimport { Icon } from \"leaflet\";\r\nimport { formatNumber } from \"../tasks/CommonUtils\";\r\nimport CovidPopup from \"../components/CovidPopup\";\r\n\r\nconst CovidMap = ({ countries, selectedValues }) => {\r\n  // Each Country\r\n  const onEachCountry = (country, layer) => {\r\n    layer.options.color = country.properties.color;\r\n    layer.options.fillColor = country.properties.fillColor;\r\n    layer.options.fillOpacity = 1;\r\n    layer.options.weight = 1;\r\n    const countryName = country.properties.ADMIN;\r\n    layer.bindPopup(\r\n      `<b>${countryName}</b><br />\r\n      <img src=${country.properties.flag} width=\"120px\" height=\"80px\" /><br />\r\n    Population: ${formatNumber(country.properties.population)}<br />\r\n    Cases: ${formatNumber(country.properties.cases)}<br />\r\n    Recovered: ${formatNumber(country.properties.recovered)}<br />\r\n    Deaths: ${formatNumber(country.properties.deaths)}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <MapContainer\r\n      className=\"MapStyle\"\r\n      zoom={2}\r\n      center={[25, 50]}\r\n      scrollWheelZoom={false}\r\n    >\r\n      <GeoJSON\r\n        className=\"CountryStyle\"\r\n        data={countries}\r\n        onEachFeature={onEachCountry}\r\n      ></GeoJSON>\r\n\r\n      <Marker\r\n        position={[selectedValues.lat, selectedValues.lng]}\r\n        icon={\r\n          new Icon({\r\n            iconUrl: markerIconPng,\r\n            iconSize: [20, 30],\r\n            iconAnchor: [12, 41],\r\n            popupAnchor: [0, -35],\r\n          })\r\n        }\r\n      >\r\n        <Popup>\r\n          <CovidPopup covidSelectedValues={selectedValues}></CovidPopup>\r\n        </Popup>\r\n      </Marker>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default CovidMap;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { formatNumber } from \"../tasks/CommonUtils\";\r\n\r\nfunction CovidLegend({ covidSelectedValues }) {\r\n  return (\r\n    <Card bg=\"success\" border=\"danger\" text=\"white\">\r\n      <h3>{covidSelectedValues.country}</h3>\r\n      <Card.Img src={covidSelectedValues.flag} />\r\n      <Card.Body>\r\n        <Card.Text as=\"h5\">\r\n          Population: {formatNumber(covidSelectedValues.population)}\r\n          <br />\r\n          Active: {formatNumber(covidSelectedValues.active)}\r\n          <br />\r\n          Cases: {formatNumber(covidSelectedValues.cases)}\r\n          <br />\r\n          Recovered: {formatNumber(covidSelectedValues.recovered)}\r\n          <br />\r\n          Deaths: {formatNumber(covidSelectedValues.deaths)}\r\n          <br />\r\n          Vaccinated: {formatNumber(covidSelectedValues.vaccinated)}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CovidLegend;\r\n","import { features } from \"../resources/data/countries.json\";\r\nimport { sortCountries, setColorCountry } from \"./CommonUtils\";\r\n\r\nclass LoadCountriesTask {\r\n  mapCountries = features;\r\n  setState = null;\r\n\r\n  load = async (setState) => {\r\n    this.setState = setState;\r\n    const url = \"https://disease.sh/v3/covid-19/countries\";\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.#processCovidData(data);\r\n      });\r\n\r\n    const sortedCountries = sortCountries(this.mapCountries);\r\n    this.setState(sortedCountries);\r\n  };\r\n\r\n  #processCovidData = (worldCountries) => {\r\n    for (let i = 0; i < this.mapCountries.length; i++) {\r\n      const mapCountry = this.mapCountries[i];\r\n\r\n      const worldCountry = worldCountries.find(\r\n        (worldCountry) =>\r\n          worldCountry.countryInfo.iso3 === mapCountry.properties.ISO_A3\r\n      );\r\n\r\n      mapCountry.properties.cases = 0;\r\n      mapCountry.properties.fillColor = \"\";\r\n      mapCountry.properties.flag = \"\";\r\n      mapCountry.properties.deaths = 0;\r\n      mapCountry.properties.population = 0;\r\n      mapCountry.properties.active = 0;\r\n\r\n      if (worldCountry != null) {\r\n        mapCountry.properties.cases = worldCountry.cases;\r\n        mapCountry.properties.flag = worldCountry.countryInfo.flag;\r\n        mapCountry.properties.recovered = worldCountry.recovered;\r\n        mapCountry.properties.deaths = worldCountry.deaths;\r\n        mapCountry.properties.population = worldCountry.population;\r\n        mapCountry.properties.active = worldCountry.active;\r\n      }\r\n\r\n      setColorCountry(mapCountry);\r\n    }\r\n    this.setState(this.mapCountries);\r\n  };\r\n}\r\n\r\nexport default LoadCountriesTask;\r\n","import React from \"react\";\r\n\r\nconst CovidZones = () => {\r\n  return (\r\n    <div className=\"covid19_box\">\r\n      <div id=\"legend1\" className=\"legend_box\">\r\n        1M+\r\n      </div>\r\n      <div id=\"legend2\" className=\"legend_box\">\r\n        500K+\r\n      </div>\r\n      <div id=\"legend3\" className=\"legend_box\">\r\n        200K+\r\n      </div>\r\n      <div id=\"legend4\" className=\"legend_box\">\r\n        50K+\r\n      </div>\r\n      <div id=\"legend5\" className=\"legend_box\">\r\n        50K-\r\n      </div>\r\n      <div id=\"legend6\" className=\"legend_box\">\r\n        N/A\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CovidZones;\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Tooltip, Cell } from \"recharts\";\r\n\r\nconst COLORS = [\"#7DB3FF\", \"#49457B\", \"#FF7C78\", \"#00FF00\"];\r\n\r\nfunction CovidPieChart({ covidChartData }) {\r\n  return (\r\n    <PieChart width={400} height={300}>\r\n      <Pie\r\n        label\r\n        dataKey=\"value\"\r\n        nameKey=\"name\"\r\n        isAnimationActive={false}\r\n        data={covidChartData}\r\n        cx={180}\r\n        cy={150}\r\n        outerRadius={120}\r\n        fill=\"#8884d8\"\r\n      >\r\n        {covidChartData.map((e, index) => (\r\n          <Cell key={index} fill={COLORS[index % COLORS.length]} />\r\n        ))}\r\n      </Pie>\r\n      <Tooltip />\r\n    </PieChart>\r\n  );\r\n}\r\n\r\nexport default CovidPieChart;\r\n","export default __webpack_public_path__ + \"static/media/Worldflags.b3c74ae9.png\";","import React, { useState, useEffect } from \"react\";\r\nimport CovidLoading from \"./CovidLoading\";\r\nimport CovidMap from \"./CovidMap\";\r\nimport CovidLegend from \"./CovidLegend\";\r\nimport LoadCountriesTask from \"../tasks/LoadCountry\";\r\nimport { getCentroid, processCovidVaccineData } from \"../tasks/CommonUtils\";\r\nimport CovidZones from \"./CovidZones\";\r\nimport CovidPieChart from \"./CovidPieChart\";\r\nimport Worldflags from \"../resources/images/Worldflags.png\";\r\n\r\nconst Covid19 = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [chartData, setChartData] = useState([{}]);\r\n  const [selectedValues, setSelectedValues] = useState({\r\n    country: \"\",\r\n    vaccinated: 0,\r\n    recovered: 0,\r\n    cases: 0,\r\n    deaths: 0,\r\n    population: 0,\r\n    active: 0,\r\n    flag: \"\",\r\n    lng: 9999,\r\n    lat: 9999,\r\n  });\r\n\r\n  const load = () => {\r\n    const loadCountriesTask = new LoadCountriesTask();\r\n    loadCountriesTask.load(setCountries);\r\n  };\r\n\r\n  const loadAllCountries = async () => {\r\n    const url = \"https://disease.sh/v3/covid-19/all\";\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const vacUrl =\r\n          \"https://disease.sh/v3/covid-19/vaccine/coverage?lastdays=1\";\r\n        fetch(vacUrl)\r\n          .then((response) => response.json())\r\n          .then((vacData) => {\r\n            setSelectedValues({\r\n              country: \"The World\",\r\n              flag: Worldflags,\r\n              recovered: data.recovered,\r\n              deaths: data.deaths,\r\n              cases: data.cases,\r\n              active: data.active,\r\n              population: data.population,\r\n              vaccinated: processCovidVaccineData(vacData),\r\n              lng: 9999,\r\n              lat: 9999,\r\n            });\r\n\r\n            setChartData([\r\n              { name: \"Cases\", value: data.cases },\r\n              { name: \"Recovered\", value: data.recovered },\r\n              { name: \"Deaths\", value: data.deaths },\r\n              { name: \"Vaccinated\", value: processCovidVaccineData(vacData) },\r\n            ]);\r\n          });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllCountries();\r\n  }, []);\r\n\r\n  var numbers;\r\n  const handleCountryChange = async (e) => {\r\n    const countryName = e.target.value;\r\n\r\n    if (countryName === \"The World\") {\r\n      loadAllCountries();\r\n    } else {\r\n      const country = countries.find(\r\n        (country) => country.properties.ADMIN === countryName\r\n      );\r\n\r\n      if (country != null) {\r\n        if (country.geometry.type === \"MultiPolygon\") {\r\n          numbers = getCentroid(country.geometry.coordinates[0][0]);\r\n        } else {\r\n          numbers = getCentroid(country.geometry.coordinates[0]);\r\n        }\r\n\r\n        const url = `https://disease.sh/v3/covid-19/vaccine/coverage/countries/${country.properties.ISO_A3}?lastdays=1`;\r\n        await fetch(url)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setSelectedValues({\r\n              country: countryName,\r\n              flag: country.properties.flag,\r\n              recovered: country.properties.recovered,\r\n              deaths: country.properties.deaths,\r\n              population: country.properties.population,\r\n              cases: country.properties.cases,\r\n              active: country.properties.active,\r\n              vaccinated: processCovidVaccineData(data),\r\n              lng: numbers[0],\r\n              lat: numbers[1],\r\n            });\r\n            setChartData([\r\n              { name: \"Cases\", value: country.properties.cases },\r\n              { name: \"Recovered\", value: country.properties.recovered },\r\n              { name: \"Deaths\", value: country.properties.deaths },\r\n              { name: \"Vaccinated\", value: processCovidVaccineData(data) },\r\n            ]);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(load, []);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"covid19-header\">\r\n          <h3>World Wide COVID-19 & Vaccination Status</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"covid19_contries\">\r\n          <select className=\"btn btn-primary\" onChange={handleCountryChange}>\r\n            <option value=\"The World\">The World</option>\r\n            {countries.map((country) => (\r\n              <option\r\n                key={country.properties.ADMIN}\r\n                value={country.properties.ADMIN}\r\n              >\r\n                {country.properties.ADMIN}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3\">\r\n          <CovidLegend covidSelectedValues={selectedValues}></CovidLegend>\r\n        </div>\r\n\r\n        <div className=\"col-lg-9\">\r\n          <h5>Click on any country on the map to see more...</h5>\r\n          <CovidZones />\r\n          {countries.length === 0 ? (\r\n            <CovidLoading />\r\n          ) : (\r\n            <CovidMap countries={countries} selectedValues={selectedValues} />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        {selectedValues.population === 0 ? (\r\n          <div />\r\n        ) : (\r\n          <CovidPieChart covidChartData={chartData}></CovidPieChart>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Covid19;\r\n","import \"./App.css\";\nimport Covid19 from \"./components/Covid19\";\n\nfunction App() {\n  return <Covid19></Covid19>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}